<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Video extends \AppBundle\Entity\Video implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'title', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'downloads', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'created', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'media', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'user', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'enabled', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'review', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'categories', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'languages', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'file', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'filevideo', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'comments', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'comment', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'tags', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'angry', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'haha', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'like', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'love', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'sad', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'woow', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'video');
        }

        return array('__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'title', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'downloads', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'created', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'media', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'user', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'enabled', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'review', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'categories', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'languages', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'file', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'filevideo', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'comments', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'comment', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'tags', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'angry', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'haha', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'like', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'love', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'sad', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'woow', '' . "\0" . 'AppBundle\\Entity\\Video' . "\0" . 'video');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Video $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setDownloads($downloads)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDownloads', array($downloads));

        return parent::setDownloads($downloads);
    }

    /**
     * {@inheritDoc}
     */
    public function getDownloads()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDownloads', array());

        return parent::getDownloads();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', array($created));

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', array());

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($enabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', array($enabled));

        return parent::setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnabled', array());

        return parent::getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\UserBundle\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setMedia(\MediaBundle\Entity\Media $media)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMedia', array($media));

        return parent::setMedia($media);
    }

    /**
     * {@inheritDoc}
     */
    public function getMedia()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMedia', array());

        return parent::getMedia();
    }

    /**
     * {@inheritDoc}
     */
    public function addCategory(\AppBundle\Entity\Category $categories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCategory', array($categories));

        return parent::addCategory($categories);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCategory(\AppBundle\Entity\Category $categories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCategory', array($categories));

        return parent::removeCategory($categories);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategories', array());

        return parent::getCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategories($categories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategories', array($categories));

        return parent::setCategories($categories);
    }

    /**
     * {@inheritDoc}
     */
    public function addLanguage(\AppBundle\Entity\Language $language)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLanguage', array($language));

        return parent::addLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLanguage(\AppBundle\Entity\Language $language)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLanguage', array($language));

        return parent::removeLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguages', array());

        return parent::getLanguages();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguages($languages)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguages', array($languages));

        return parent::setLanguages($languages);
    }

    /**
     * {@inheritDoc}
     */
    public function getFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFile', array());

        return parent::getFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setFile($file)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFile', array($file));

        return parent::setFile($file);
    }

    /**
     * {@inheritDoc}
     */
    public function getFilevideo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFilevideo', array());

        return parent::getFilevideo();
    }

    /**
     * {@inheritDoc}
     */
    public function setFilevideo($filevideo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFilevideo', array($filevideo));

        return parent::setFilevideo($filevideo);
    }

    /**
     * {@inheritDoc}
     */
    public function getReview()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReview', array());

        return parent::getReview();
    }

    /**
     * {@inheritDoc}
     */
    public function setReview($review)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReview', array($review));

        return parent::setReview($review);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getComment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComment', array());

        return parent::getComment();
    }

    /**
     * {@inheritDoc}
     */
    public function setComment($comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComment', array($comment));

        return parent::setComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function addComment(\AppBundle\Entity\Comment $comments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addComment', array($comments));

        return parent::addComment($comments);
    }

    /**
     * {@inheritDoc}
     */
    public function removeComment(\AppBundle\Entity\Comment $comments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeComment', array($comments));

        return parent::removeComment($comments);
    }

    /**
     * {@inheritDoc}
     */
    public function getComments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComments', array());

        return parent::getComments();
    }

    /**
     * {@inheritDoc}
     */
    public function getTags()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTags', array());

        return parent::getTags();
    }

    /**
     * {@inheritDoc}
     */
    public function setTags($tags)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTags', array($tags));

        return parent::setTags($tags);
    }

    /**
     * {@inheritDoc}
     */
    public function getLike()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLike', array());

        return parent::getLike();
    }

    /**
     * {@inheritDoc}
     */
    public function setLike($like)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLike', array($like));

        return parent::setLike($like);
    }

    /**
     * {@inheritDoc}
     */
    public function getLove()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLove', array());

        return parent::getLove();
    }

    /**
     * {@inheritDoc}
     */
    public function setLove($love)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLove', array($love));

        return parent::setLove($love);
    }

    /**
     * {@inheritDoc}
     */
    public function getAngry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAngry', array());

        return parent::getAngry();
    }

    /**
     * {@inheritDoc}
     */
    public function setAngry($angry)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAngry', array($angry));

        return parent::setAngry($angry);
    }

    /**
     * {@inheritDoc}
     */
    public function getWoow()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWoow', array());

        return parent::getWoow();
    }

    /**
     * {@inheritDoc}
     */
    public function setWoow($woow)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWoow', array($woow));

        return parent::setWoow($woow);
    }

    /**
     * {@inheritDoc}
     */
    public function getHaha()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHaha', array());

        return parent::getHaha();
    }

    /**
     * {@inheritDoc}
     */
    public function setHaha($haha)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHaha', array($haha));

        return parent::setHaha($haha);
    }

    /**
     * {@inheritDoc}
     */
    public function getSad()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSad', array());

        return parent::getSad();
    }

    /**
     * {@inheritDoc}
     */
    public function setSad($sad)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSad', array($sad));

        return parent::setSad($sad);
    }

    /**
     * {@inheritDoc}
     */
    public function getVideo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVideo', array());

        return parent::getVideo();
    }

    /**
     * {@inheritDoc}
     */
    public function setVideo(\MediaBundle\Entity\Media $video)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVideo', array($video));

        return parent::setVideo($video);
    }

}
